<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.clinica.cadastro.controller.api.swagger.AppointmentControllerSwagger"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.tags.Tag"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseStatus"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.controller.modelMapper.AppointmentMapper"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.responses.ApiResponse"/>
    <fullyQualifiedTypeName name="java.net.UnknownHostException"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.domain.dto.output.MedicalAppointmentDtoFinancial"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="lombok.Value"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.kafka.KafkaProperties.Template"/>
    <fullyQualifiedTypeName name="org.springframework.mail.MailAuthenticationException"/>
    <fullyQualifiedTypeName name="jakarta.mail.MessagingException"/>
    <fullyQualifiedTypeName name="freemarker.template.Template"/>
    <fullyQualifiedTypeName name="com.clinica.email.domain.exception.MailException"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.clinica.email.domain.service.EmailService"/>
    <fullyQualifiedTypeName name="com.clinica.email.domain.service.EmailService.Message"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.domain.dto.emailservice.EmailDto"/>
    <fullyQualifiedTypeName name="com.thoughtworks.xstream.mapper.Mapper"/>
    <fullyQualifiedTypeName name="org.apache.catalina.mapper.Mapper"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerRecord"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.ErrorHandlingDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.handler.annotation.Payload"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.SendResult"/>
    <fullyQualifiedTypeName name="org.springframework.util.concurrent.ListenableFuture"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.domain.exception.BusinessException"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerRecord"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.ProducerListener"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.core.kafka.KafkaProducerListenerConfig"/>
    <fullyQualifiedTypeName name="com.clinica.cadastro.domain.service.kafka.KafkaServiceToEmail"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.errors.SerializationException"/>
    <fullyQualifiedTypeName name="com.google.common.annotations.Beta"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.converter.JsonbMessageConverter"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.converter.JsonMessageConverter"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="lombok.SneakyThrows"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="com.clinica.email.domain.dto.EmailDto"/>
</qualifiedTypeNameHistroy>
