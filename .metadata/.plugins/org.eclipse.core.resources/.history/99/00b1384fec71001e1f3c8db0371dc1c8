package com.clinica.medicos.core.kafka;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.producer.ProducerConfig;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.annotation.EnableKafka;
import org.springframework.kafka.core.DefaultKafkaProducerFactory;
import org.springframework.kafka.core.ProducerFactory;

import com.clinica.medicos.domain.dto.DoctorKafkaDTOOutput;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.ser.std.StringSerializer;



@Configuration
@EnableKafka
public class KafkaConfig {

	 	@Value("${spring.kafka.bootstrap-servers:localhost:9092}")
	    private String bootstrapAddress;
	
	@Bean
	public ProducerFactory<String, DoctorKafkaDTOOutput> producerAppointment() {
		
		Map<String, Object> configProps = new HashMap<>();
        
		configProps.put(
                ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,
                bootstrapAddress);
        configProps.put(
                ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG,
                StringSerializer.class);
        configProps.put(
                ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,
                JsonSerializer.class);
        
       return new DefaultKafkaProducerFactory<>(configProps);
	}
	
}
