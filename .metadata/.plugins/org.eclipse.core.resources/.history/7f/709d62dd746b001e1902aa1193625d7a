package com.clinica.medicos.domain.service;

import java.util.List;

import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.stereotype.Service;

import com.clinica.medicos.domain.exception.EntityInUseException;
import com.clinica.medicos.domain.exception.EntityNotFoundException;
import com.clinica.medicos.domain.model.Doctor;
import com.clinica.medicos.domain.repository.DoctorRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class DoctorService {

	final private DoctorRepository repository;
	
	public Doctor findById(Long doctorId) {
		return repository.findById(doctorId)
				.orElseThrow(() -> new EntityNotFoundException(
						String.format("Medico de id %s não foi encontrado", doctorId)));
	}
	
	public List<Doctor> findAll(){
		return repository.findAll();
	}
	
	@Transactional
	public Doctor saveDoctor(Doctor doctor) {
		return repository.save(doctor);
	}
		
	@Transactional
	public void deleteDoctorById(Long doctorId) {
		try {
			findById(doctorId);
			repository.deleteById(doctorId);
			repository.flush();
			
		}catch(EmptyResultDataAccessException e) {
			throw new EntityNotFoundException(
					String.format("Medico de id %s não foi encontrado.", doctorId));
		
		}catch(DataIntegrityViolationException e) {
			throw new EntityInUseException(
					String.format("Medico de id %s esta em uso.", doctorId));
		}
	}
}
