package com.clinica.procedimentos.controller.exeptionhandler;

import java.net.URI;

import org.springframework.http.HttpStatus;
import org.springframework.http.ProblemDetail;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.clinica.procedimentos.domain.exception.EntityNotFoundException;

@RestControllerAdvice
public class GlobalExeption extends ResponseEntityExceptionHandler {

//	@ExceptionHandler(MethodArgumentNotValidException.class)
	ProblemDetail handlerhttpMessageNotReadableException(MethodArgumentNotValidException e) {
		ProblemDetail problem = ProblemDetail.forStatusAndDetail(HttpStatus.BAD_REQUEST, e.getMessage());
		
		problem.setTitle("Parametros invalidos");
		problem.setType(URI.create("https://clinicas.com/errors/parametros-invalidos"));
		
		return problem;
		
		
	}
	
	@ExceptionHandler(EntityNotFoundException.class)
	ProblemDetail handlerhttpMessageNotReadableException(EntityNotFoundException e) {
		ProblemDetail problem = ProblemDetail.forStatusAndDetail(HttpStatus.NOT_FOUND, e.getMessage());
		
		problem.setTitle("Procedimento n√£o registrado");
		problem.setType(URI.create("https://clinicas.com/errors/entity-not-found"));
		
		return problem;
		
		
	}
}
